[{"authors":null,"categories":null,"content":"Nelson Bighetti is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n  Download my resum√©.\n","date":1607817600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1607817600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Nelson Bighetti is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.","tags":null,"title":"Nelson Bighetti","type":"authors"},{"authors":null,"categories":null,"content":"I\u0026rsquo;m a software engineer at gapfruit where I work on the Genode-based Gapfruit microkernel operating system. I\u0026rsquo;m particularly interested in OS and embedded systems development, security and artificial intelligence. For an impression of the technologies I have worked with, take a look at some of the projects I have completed.\n  Download my resume.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"d6820910f8e58fe6f3a219224182a640","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I\u0026rsquo;m a software engineer at gapfruit where I work on the Genode-based Gapfruit microkernel operating system. I\u0026rsquo;m particularly interested in OS and embedded systems development, security and artificial intelligence. For an impression of the technologies I have worked with, take a look at some of the projects I have completed.","tags":null,"title":"Timo Nicolai","type":"authors"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"21b57329b9887c8f51a0faed135fbeda","permalink":"/project/buenzlicoin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/buenzlicoin/","section":"project","summary":"A proof of work based blockchain/cryptocurrency written completely from scratch in C++. It is split into two programs, bnode which manages the blockchain and bwallet which is a command line tool that manages wallets and interacts with bnode via a REST interface in order to create transactions and mine blocks. Multiple bnode instance can also be linked together and will automatically exchange transactions and blocks via WebSocket channels, leading to distributed consensus.","tags":["C","Distributed"],"title":"BuenzliCoin","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f48bf9e256bb1c99354795a73009f1e7","permalink":"/project/fire-llvm/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/fire-llvm/","section":"project","summary":"A Clang plugin that can be used to turn ordinary C++ functions and objects into command line interfaces (CLIs) similarly to [python-fire](https://github.com/google/python-fire). It works by adding an extra compiler pass that rewrites source code on the fly in order to inject argument parsing code.","tags":["C","Compiler"],"title":"fire-llvm","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"cb22399bb65c09189b2ebad1c5333325","permalink":"/project/mapreducepp/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/mapreducepp/","section":"project","summary":"An implemention of the MapReduce programming model written in C++ and based on gRPC. Consists of a single master program that delegates tasks to a number of workers in highly parallel and fault tolerant manner. Based on the [MapReduce paper](https://static.googleusercontent.com/media/research.google.com/de//archive/mapreduce-osdi04.pdf).","tags":["C","Distributed"],"title":"MapReduce++","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"238209b050e7c5e739eaa3a5b6e093e6","permalink":"/project/mpsym/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/mpsym/","section":"project","summary":"Improving mapping of computational tasks to manycore architectures using computational group theory, published in [IEEE TCAD](https://ieeexplore.ieee.org/document/9506807). MPsym can determine whether different mappings are equivalent due to symmetries of an architecture's topology. Works efficiently with large, hierarchical architectures and can be used to improve existing mapping discovery algorithms by making them \"symmetry aware\". Implemented in C++ for performance with easy to use Python bindings.","tags":["C","Python","Distributed"],"title":"mpsym","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"2207b00bc8eec46ddcd48d21b2a04f0e","permalink":"/project/colorization/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/colorization/","section":"project","summary":"A from-scratch PyTorch implementation of the convolutional neural network described by Zhang et al. in [Colorful Image Colorization](https://arxiv.org/abs/1603.08511). Can be used with pretrained weights or trained from scratch. Also includes an implementation of Google's DeepLab-V3+ network that can be substituted for the default VGG network.","tags":["Python","ML"],"title":"Colorful Image Colorization in PyTorch","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"93434e240dee2b4242ed5d8ef7d5774f","permalink":"/project/cppbind/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/cppbind/","section":"project","summary":"An extensible program for automatically generating language bindings to C++. Similar to SWIG but with a much smaller codebase due to the use of the Clang AST API as a frontend. Currently supports C and Lua and additional backends can be implemented dynamically with Python.","tags":["C","Compiler"],"title":"CPPBind","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"4e9999704d17fc32fe2f4549cc31a067","permalink":"/project/z80-verilog/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/z80-verilog/","section":"project","summary":"A Verilog implementation of a Z80 compatible CISC processor architecture. Originally intended for ASIC synthesis, now also makes it possible to simulate execution of arbitrary compiled C programs with Icarus Verilog. Also includes `ictest`, a program for automatically generating, running and analysing millions of lines of instruction set test cases. As well as a number of more complex test programs written in C.","tags":["Hardware"],"title":"Z80 Verilog","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"3df51d057f5c70a5ac618ed50452cbe3","permalink":"/project/focusfusion/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/focusfusion/","section":"project","summary":"A Python library implementing several state of the art algorithms for fusing several out of focus images into a single sharp one.","tags":["Python","ML"],"title":"Focusfusion","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"40aabf7a6c49400b5be0086c837dbe1c","permalink":"/project/l4re-pong/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/l4re-pong/","section":"project","summary":"The classic \"Pong\" game on the [L4Re microkernel](https://l4re.org/). Includes custom implementations of `malloc`, `free` etc. for L4Re and several server programs implementing keyboard and framebuffer handling as well as paddle control and logging.","tags":["C","OS"],"title":"Pong for L4Re","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"3eed045eaedccc310e5c761b3c8e68dc","permalink":"/project/diceprob/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/diceprob/","section":"project","summary":"A parser and interpreter for the scripting language used by [AnyDice](https://anydice.com/). Makes it possible to run AnyDice scripts that compute probability distributions of complex dice rolls locally. Written in Haskell using the `megaparsec` parser library.","tags":["Compiler"],"title":"Diceprob","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f427346f8687e964c967879653630b81","permalink":"/project/parallel-kmeans/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/parallel-kmeans/","section":"project","summary":"Implementation and Comparison of the k-means clustering algorithm in OpenCV, pure C, C + OpenMP and C + CUDA. Parallelization with both OpenMP and CUDA results in demonstrable speedup over the non-parallel C implementation. Includes demo code and benchmark results.","tags":["C","Distributed"],"title":"Parallel K-Means Clustering","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"d96a0fd064ac11a862b7ef6128e6cf9a","permalink":"/project/hello-kernel/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/hello-kernel/","section":"project","summary":"A simple 32 bit x86 bootloader and dummy kernel written for educational purposes. The bootloader is able to read and run an ELF kernel image from disk. The kernel in turn writes a greeting to the serial console. Runs under QEMU.","tags":["C","OS"],"title":"Hello Kernel","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"31573f3033a4b798bb58b882dde0fc93","permalink":"/project/xtensa-fft/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/xtensa-fft/","section":"project","summary":"An implementation of the Cooley-Tukey FFT algorithm for one of Tensilica's Xtensa processor platforms. Uses hardware acceleration to compute the FFT more than 25 times faster for moderately large input sizes.","tags":["C","Hardware"],"title":"Cooley-Tukey FFT on the Xtensa Architecture","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"463dc8d6e6763d112ddcc18cc9baff49","permalink":"/project/iterative-channel-coding/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/iterative-channel-coding/","section":"project","summary":"A quantitative comparison of different iterative decoding algorithms applied to classical channel code descriptions","tags":["C"],"title":"Iterative Channel Coding","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"15eafe3d7476d2814769cb1288f770b4","permalink":"/project/linux-progs/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/linux-progs/","section":"project","summary":"A collection of C/C++/Bash programs using the Linux Programming API. Written for various assignments. Includes a simple shell.","tags":["C","OS"],"title":"Linux API Programs","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"da36d8c45d2b4152fbf8924e491e6f35","permalink":"/project/digital-design/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/digital-design/","section":"project","summary":"Design and implementation of a digital circuit that performs the LUP matrix decomposition.","tags":["Hardware"],"title":"LUP Decomposition in Hardware","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"9615c301aa45d3b65b6caaa1c2dbe336","permalink":"/project/analog-design/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/analog-design/","section":"project","summary":"Design, Layout and Simulation of an integrated operational transamplifier (OTA).","tags":["Hardware"],"title":"Analog OTA Design","type":"project"},{"authors":["Andres Goens","Timo Nicolai","Jeronimo Castrillon"],"categories":null,"content":"","date":1628035200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1628035200,"objectID":"98572f5ec87a8cc86d2de6483fd13db7","permalink":"/publication/mpsym/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/mpsym/","section":"publication","summary":"In this paper we present mpsym, a C++ library that uses methods from computational group theory as well as domain-specific algorithms to improve design-space exploration in hierarchical architecture topologies.","tags":["Source Themes"],"title":"mpsym: Improving Design-Space Exploration of Clustered Manycores with Arbitrary Topologies","type":"publication"},{"authors":["Nelson Bighetti","Âê≥ÊÅ©ÈÅî"],"categories":["Demo","ÊïôÁ®ã"],"content":"Overview  The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It\u0026rsquo;s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more    The template is mobile first with a responsive design to ensure that your site looks stunning on every device.  Get Started  üëâ Create a new site üìö Personalize your site üí¨ Chat with the Wowchemy community or Hugo community üê¶ Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy üí° Request a feature or report a bug for Wowchemy ‚¨ÜÔ∏è Updating Wowchemy? View the Update Tutorial and Release Notes  Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n‚ù§Ô∏è Click here to become a sponsor and help support Wowchemy\u0026rsquo;s future ‚ù§Ô∏è As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features ü¶Ñ‚ú®\nEcosystem  Hugo Academic CLI: Automatically import publications from BibTeX  Inspiration Check out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures  Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, ‰∏≠Êñá, and Portugu√™s Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome üëã We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","ÂºÄÊ∫ê"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]